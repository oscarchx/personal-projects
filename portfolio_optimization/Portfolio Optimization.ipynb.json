{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [],
   "source": [
    "from datascience import *\n",
    "import numpy as np\n",
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "plt.style.use('fivethirtyeight')\n",
    "import warnings\n",
    "warnings.simplefilter(action=\"ignore\", category=FutureWarning)\n",
    "import pandas as pd\n",
    "from datetime import date\n",
    "\n",
    "from urllib.request import urlopen \n",
    "import re\n",
    "def read_url(url): \n",
    "    return re.sub('\\\\s+', ' ', urlopen(url).read().decode())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting git+https://github.com/pydata/pandas-datareader.git\n",
      "  Cloning https://github.com/pydata/pandas-datareader.git to /tmp/pip-8clmeqp1-build\n",
      "  Requirement already satisfied (use --upgrade to upgrade): pandas-datareader==0.7.0+49.gb2ee60b from git+https://github.com/pydata/pandas-datareader.git in /srv/app/venv/lib/python3.6/site-packages\n",
      "Requirement already satisfied: lxml in /srv/app/venv/lib/python3.6/site-packages (from pandas-datareader==0.7.0+49.gb2ee60b)\n",
      "Requirement already satisfied: pandas>=0.19.2 in /srv/app/venv/lib/python3.6/site-packages (from pandas-datareader==0.7.0+49.gb2ee60b)\n",
      "Requirement already satisfied: requests>=2.3.0 in /srv/app/venv/lib/python3.6/site-packages (from pandas-datareader==0.7.0+49.gb2ee60b)\n",
      "Requirement already satisfied: wrapt in /srv/app/venv/lib/python3.6/site-packages (from pandas-datareader==0.7.0+49.gb2ee60b)\n",
      "Requirement already satisfied: numpy>=1.9.0 in /srv/app/venv/lib/python3.6/site-packages (from pandas>=0.19.2->pandas-datareader==0.7.0+49.gb2ee60b)\n",
      "Requirement already satisfied: pytz>=2011k in /srv/app/venv/lib/python3.6/site-packages (from pandas>=0.19.2->pandas-datareader==0.7.0+49.gb2ee60b)\n",
      "Requirement already satisfied: python-dateutil>=2.5.0 in /srv/app/venv/lib/python3.6/site-packages (from pandas>=0.19.2->pandas-datareader==0.7.0+49.gb2ee60b)\n",
      "Requirement already satisfied: chardet<3.1.0,>=3.0.2 in /srv/app/venv/lib/python3.6/site-packages (from requests>=2.3.0->pandas-datareader==0.7.0+49.gb2ee60b)\n",
      "Requirement already satisfied: urllib3<1.25,>=1.21.1 in /srv/app/venv/lib/python3.6/site-packages (from requests>=2.3.0->pandas-datareader==0.7.0+49.gb2ee60b)\n",
      "Requirement already satisfied: idna<2.9,>=2.5 in /srv/app/venv/lib/python3.6/site-packages (from requests>=2.3.0->pandas-datareader==0.7.0+49.gb2ee60b)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /srv/app/venv/lib/python3.6/site-packages (from requests>=2.3.0->pandas-datareader==0.7.0+49.gb2ee60b)\n",
      "Requirement already satisfied: six>=1.5 in /srv/app/venv/lib/python3.6/site-packages (from python-dateutil>=2.5.0->pandas>=0.19.2->pandas-datareader==0.7.0+49.gb2ee60b)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install git+https://github.com/pydata/pandas-datareader.git"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pandas_datareader.data import DataReader\n",
    "from pandas_datareader import data, wb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Attributes     open                                      high            \\\n",
      "Symbols        AAPL      FB    GOOG        K    NFLX     AAPL        FB   \n",
      "date                                                                      \n",
      "2016-01-04  96.5393  101.95  743.00  64.0737  109.00  99.1342  102.2400   \n",
      "2016-01-05  99.4936  102.89  746.45  64.5033  110.45  99.5876  103.7099   \n",
      "2016-01-06  94.6106  101.13  730.00  63.8052  105.29  96.3135  103.7700   \n",
      "2016-01-07  92.8418  100.50  730.31  63.6262  116.36  94.2060  101.4300   \n",
      "2016-01-08  92.7195   99.88  731.45  63.8500  116.33  93.2464  100.5000   \n",
      "\n",
      "Attributes                             ...       close                  \\\n",
      "Symbols       GOOG        K    NFLX    ...        AAPL      FB    GOOG   \n",
      "date                                   ...                               \n",
      "2016-01-04  744.06  64.1543  110.00    ...     99.1172  102.22  741.84   \n",
      "2016-01-05  752.00  65.0493  110.58    ...     96.6334  102.73  742.58   \n",
      "2016-01-06  747.18  64.7092  117.91    ...     94.7423  102.97  743.62   \n",
      "2016-01-07  738.50  63.7963  122.18    ...     90.7438   97.92  726.39   \n",
      "2016-01-08  733.23  64.7897  117.72    ...     91.2236   97.33  714.47   \n",
      "\n",
      "Attributes                     volume                                        \n",
      "Symbols           K    NFLX      AAPL        FB     GOOG        K      NFLX  \n",
      "date                                                                         \n",
      "2016-01-04  64.0916  109.96  67649387  37912403  3272776  2039839  20794848  \n",
      "2016-01-05  64.3243  107.66  55790992  23258238  1950691  2210468  17664562  \n",
      "2016-01-06  64.4496  117.68  68457388  25096183  1947034  2503981  33045656  \n",
      "2016-01-07  62.9818  114.56  81094428  45172906  2963741  1933206  33636661  \n",
      "2016-01-08  63.9753  111.39  70798016  35402298  2450857  3157399  18067140  \n",
      "\n",
      "[5 rows x 25 columns]\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 252 entries, 2016-01-04 to 2016-12-30\n",
      "Data columns (total 25 columns):\n",
      "(open, AAPL)      252 non-null float64\n",
      "(open, FB)        252 non-null float64\n",
      "(open, GOOG)      252 non-null float64\n",
      "(open, K)         252 non-null float64\n",
      "(open, NFLX)      252 non-null float64\n",
      "(high, AAPL)      252 non-null float64\n",
      "(high, FB)        252 non-null float64\n",
      "(high, GOOG)      252 non-null float64\n",
      "(high, K)         252 non-null float64\n",
      "(high, NFLX)      252 non-null float64\n",
      "(low, AAPL)       252 non-null float64\n",
      "(low, FB)         252 non-null float64\n",
      "(low, GOOG)       252 non-null float64\n",
      "(low, K)          252 non-null float64\n",
      "(low, NFLX)       252 non-null float64\n",
      "(close, AAPL)     252 non-null float64\n",
      "(close, FB)       252 non-null float64\n",
      "(close, GOOG)     252 non-null float64\n",
      "(close, K)        252 non-null float64\n",
      "(close, NFLX)     252 non-null float64\n",
      "(volume, AAPL)    252 non-null int64\n",
      "(volume, FB)      252 non-null int64\n",
      "(volume, GOOG)    252 non-null int64\n",
      "(volume, K)       252 non-null int64\n",
      "(volume, NFLX)    252 non-null int64\n",
      "dtypes: float64(20), int64(5)\n",
      "memory usage: 51.2+ KB\n"
     ]
    }
   ],
   "source": [
    "###\n",
    "start = date(2016,1,1)\n",
    "end = date(2016,12,31)\n",
    "\n",
    "# Set the ticker\n",
    "ticker = ['AAPL','FB','GOOG','NFLX','K']\n",
    "\n",
    "# Set the data source\n",
    "data_source = 'iex'\n",
    "\n",
    "# Import the stock prices\n",
    "stock_prices5 = DataReader(ticker, data_source, start, end)\n",
    "\n",
    "# Display and inspect the result\n",
    "print(stock_prices5.head())\n",
    "stock_prices5.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th>Attributes</th>\n",
       "      <th colspan=\"5\" halign=\"left\">open</th>\n",
       "      <th colspan=\"5\" halign=\"left\">high</th>\n",
       "      <th>...</th>\n",
       "      <th colspan=\"5\" halign=\"left\">close</th>\n",
       "      <th colspan=\"5\" halign=\"left\">volume</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Symbols</th>\n",
       "      <th>AAPL</th>\n",
       "      <th>FB</th>\n",
       "      <th>GOOG</th>\n",
       "      <th>K</th>\n",
       "      <th>NFLX</th>\n",
       "      <th>AAPL</th>\n",
       "      <th>FB</th>\n",
       "      <th>GOOG</th>\n",
       "      <th>K</th>\n",
       "      <th>NFLX</th>\n",
       "      <th>...</th>\n",
       "      <th>AAPL</th>\n",
       "      <th>FB</th>\n",
       "      <th>GOOG</th>\n",
       "      <th>K</th>\n",
       "      <th>NFLX</th>\n",
       "      <th>AAPL</th>\n",
       "      <th>FB</th>\n",
       "      <th>GOOG</th>\n",
       "      <th>K</th>\n",
       "      <th>NFLX</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2016-01-04</th>\n",
       "      <td>96.5393</td>\n",
       "      <td>101.95</td>\n",
       "      <td>743.00</td>\n",
       "      <td>64.0737</td>\n",
       "      <td>109.00</td>\n",
       "      <td>99.1342</td>\n",
       "      <td>102.2400</td>\n",
       "      <td>744.06</td>\n",
       "      <td>64.1543</td>\n",
       "      <td>110.00</td>\n",
       "      <td>...</td>\n",
       "      <td>99.1172</td>\n",
       "      <td>102.22</td>\n",
       "      <td>741.84</td>\n",
       "      <td>64.0916</td>\n",
       "      <td>109.96</td>\n",
       "      <td>67649387</td>\n",
       "      <td>37912403</td>\n",
       "      <td>3272776</td>\n",
       "      <td>2039839</td>\n",
       "      <td>20794848</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-05</th>\n",
       "      <td>99.4936</td>\n",
       "      <td>102.89</td>\n",
       "      <td>746.45</td>\n",
       "      <td>64.5033</td>\n",
       "      <td>110.45</td>\n",
       "      <td>99.5876</td>\n",
       "      <td>103.7099</td>\n",
       "      <td>752.00</td>\n",
       "      <td>65.0493</td>\n",
       "      <td>110.58</td>\n",
       "      <td>...</td>\n",
       "      <td>96.6334</td>\n",
       "      <td>102.73</td>\n",
       "      <td>742.58</td>\n",
       "      <td>64.3243</td>\n",
       "      <td>107.66</td>\n",
       "      <td>55790992</td>\n",
       "      <td>23258238</td>\n",
       "      <td>1950691</td>\n",
       "      <td>2210468</td>\n",
       "      <td>17664562</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-06</th>\n",
       "      <td>94.6106</td>\n",
       "      <td>101.13</td>\n",
       "      <td>730.00</td>\n",
       "      <td>63.8052</td>\n",
       "      <td>105.29</td>\n",
       "      <td>96.3135</td>\n",
       "      <td>103.7700</td>\n",
       "      <td>747.18</td>\n",
       "      <td>64.7092</td>\n",
       "      <td>117.91</td>\n",
       "      <td>...</td>\n",
       "      <td>94.7423</td>\n",
       "      <td>102.97</td>\n",
       "      <td>743.62</td>\n",
       "      <td>64.4496</td>\n",
       "      <td>117.68</td>\n",
       "      <td>68457388</td>\n",
       "      <td>25096183</td>\n",
       "      <td>1947034</td>\n",
       "      <td>2503981</td>\n",
       "      <td>33045656</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-07</th>\n",
       "      <td>92.8418</td>\n",
       "      <td>100.50</td>\n",
       "      <td>730.31</td>\n",
       "      <td>63.6262</td>\n",
       "      <td>116.36</td>\n",
       "      <td>94.2060</td>\n",
       "      <td>101.4300</td>\n",
       "      <td>738.50</td>\n",
       "      <td>63.7963</td>\n",
       "      <td>122.18</td>\n",
       "      <td>...</td>\n",
       "      <td>90.7438</td>\n",
       "      <td>97.92</td>\n",
       "      <td>726.39</td>\n",
       "      <td>62.9818</td>\n",
       "      <td>114.56</td>\n",
       "      <td>81094428</td>\n",
       "      <td>45172906</td>\n",
       "      <td>2963741</td>\n",
       "      <td>1933206</td>\n",
       "      <td>33636661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-08</th>\n",
       "      <td>92.7195</td>\n",
       "      <td>99.88</td>\n",
       "      <td>731.45</td>\n",
       "      <td>63.8500</td>\n",
       "      <td>116.33</td>\n",
       "      <td>93.2464</td>\n",
       "      <td>100.5000</td>\n",
       "      <td>733.23</td>\n",
       "      <td>64.7897</td>\n",
       "      <td>117.72</td>\n",
       "      <td>...</td>\n",
       "      <td>91.2236</td>\n",
       "      <td>97.33</td>\n",
       "      <td>714.47</td>\n",
       "      <td>63.9753</td>\n",
       "      <td>111.39</td>\n",
       "      <td>70798016</td>\n",
       "      <td>35402298</td>\n",
       "      <td>2450857</td>\n",
       "      <td>3157399</td>\n",
       "      <td>18067140</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Attributes     open                                      high            \\\n",
       "Symbols        AAPL      FB    GOOG        K    NFLX     AAPL        FB   \n",
       "date                                                                      \n",
       "2016-01-04  96.5393  101.95  743.00  64.0737  109.00  99.1342  102.2400   \n",
       "2016-01-05  99.4936  102.89  746.45  64.5033  110.45  99.5876  103.7099   \n",
       "2016-01-06  94.6106  101.13  730.00  63.8052  105.29  96.3135  103.7700   \n",
       "2016-01-07  92.8418  100.50  730.31  63.6262  116.36  94.2060  101.4300   \n",
       "2016-01-08  92.7195   99.88  731.45  63.8500  116.33  93.2464  100.5000   \n",
       "\n",
       "Attributes                             ...       close                  \\\n",
       "Symbols       GOOG        K    NFLX    ...        AAPL      FB    GOOG   \n",
       "date                                   ...                               \n",
       "2016-01-04  744.06  64.1543  110.00    ...     99.1172  102.22  741.84   \n",
       "2016-01-05  752.00  65.0493  110.58    ...     96.6334  102.73  742.58   \n",
       "2016-01-06  747.18  64.7092  117.91    ...     94.7423  102.97  743.62   \n",
       "2016-01-07  738.50  63.7963  122.18    ...     90.7438   97.92  726.39   \n",
       "2016-01-08  733.23  64.7897  117.72    ...     91.2236   97.33  714.47   \n",
       "\n",
       "Attributes                     volume                                        \n",
       "Symbols           K    NFLX      AAPL        FB     GOOG        K      NFLX  \n",
       "date                                                                         \n",
       "2016-01-04  64.0916  109.96  67649387  37912403  3272776  2039839  20794848  \n",
       "2016-01-05  64.3243  107.66  55790992  23258238  1950691  2210468  17664562  \n",
       "2016-01-06  64.4496  117.68  68457388  25096183  1947034  2503981  33045656  \n",
       "2016-01-07  62.9818  114.56  81094428  45172906  2963741  1933206  33636661  \n",
       "2016-01-08  63.9753  111.39  70798016  35402298  2450857  3157399  18067140  \n",
       "\n",
       "[5 rows x 25 columns]"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stock_prices5.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Symbols</th>\n",
       "      <th>AAPL</th>\n",
       "      <th>FB</th>\n",
       "      <th>GOOG</th>\n",
       "      <th>K</th>\n",
       "      <th>NFLX</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2016-01-04</th>\n",
       "      <td>99.1172</td>\n",
       "      <td>102.22</td>\n",
       "      <td>741.84</td>\n",
       "      <td>64.0916</td>\n",
       "      <td>109.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-05</th>\n",
       "      <td>96.6334</td>\n",
       "      <td>102.73</td>\n",
       "      <td>742.58</td>\n",
       "      <td>64.3243</td>\n",
       "      <td>107.66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-06</th>\n",
       "      <td>94.7423</td>\n",
       "      <td>102.97</td>\n",
       "      <td>743.62</td>\n",
       "      <td>64.4496</td>\n",
       "      <td>117.68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-07</th>\n",
       "      <td>90.7438</td>\n",
       "      <td>97.92</td>\n",
       "      <td>726.39</td>\n",
       "      <td>62.9818</td>\n",
       "      <td>114.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-08</th>\n",
       "      <td>91.2236</td>\n",
       "      <td>97.33</td>\n",
       "      <td>714.47</td>\n",
       "      <td>63.9753</td>\n",
       "      <td>111.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-11</th>\n",
       "      <td>92.7007</td>\n",
       "      <td>97.51</td>\n",
       "      <td>716.03</td>\n",
       "      <td>64.0379</td>\n",
       "      <td>114.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-12</th>\n",
       "      <td>94.0461</td>\n",
       "      <td>99.37</td>\n",
       "      <td>726.07</td>\n",
       "      <td>63.9663</td>\n",
       "      <td>116.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-13</th>\n",
       "      <td>91.6282</td>\n",
       "      <td>95.44</td>\n",
       "      <td>700.56</td>\n",
       "      <td>63.4562</td>\n",
       "      <td>106.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-14</th>\n",
       "      <td>93.6321</td>\n",
       "      <td>98.37</td>\n",
       "      <td>714.72</td>\n",
       "      <td>64.1453</td>\n",
       "      <td>107.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-15</th>\n",
       "      <td>91.3835</td>\n",
       "      <td>94.97</td>\n",
       "      <td>694.45</td>\n",
       "      <td>63.2503</td>\n",
       "      <td>104.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-19</th>\n",
       "      <td>90.9413</td>\n",
       "      <td>95.26</td>\n",
       "      <td>701.79</td>\n",
       "      <td>63.7605</td>\n",
       "      <td>107.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-20</th>\n",
       "      <td>91.0637</td>\n",
       "      <td>94.35</td>\n",
       "      <td>698.45</td>\n",
       "      <td>62.7402</td>\n",
       "      <td>107.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-21</th>\n",
       "      <td>90.6026</td>\n",
       "      <td>94.16</td>\n",
       "      <td>706.59</td>\n",
       "      <td>62.6149</td>\n",
       "      <td>102.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-22</th>\n",
       "      <td>95.4197</td>\n",
       "      <td>97.94</td>\n",
       "      <td>725.25</td>\n",
       "      <td>64.0916</td>\n",
       "      <td>100.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-25</th>\n",
       "      <td>93.5569</td>\n",
       "      <td>97.01</td>\n",
       "      <td>711.67</td>\n",
       "      <td>63.1071</td>\n",
       "      <td>99.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-26</th>\n",
       "      <td>94.0743</td>\n",
       "      <td>97.34</td>\n",
       "      <td>713.04</td>\n",
       "      <td>63.7247</td>\n",
       "      <td>97.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-27</th>\n",
       "      <td>87.8930</td>\n",
       "      <td>94.45</td>\n",
       "      <td>699.99</td>\n",
       "      <td>64.0558</td>\n",
       "      <td>91.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-28</th>\n",
       "      <td>88.5234</td>\n",
       "      <td>109.11</td>\n",
       "      <td>730.96</td>\n",
       "      <td>65.1477</td>\n",
       "      <td>94.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-29</th>\n",
       "      <td>91.5811</td>\n",
       "      <td>112.21</td>\n",
       "      <td>742.95</td>\n",
       "      <td>65.7295</td>\n",
       "      <td>91.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-01</th>\n",
       "      <td>90.7250</td>\n",
       "      <td>115.09</td>\n",
       "      <td>752.00</td>\n",
       "      <td>65.8638</td>\n",
       "      <td>94.09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-02</th>\n",
       "      <td>88.8903</td>\n",
       "      <td>114.61</td>\n",
       "      <td>764.65</td>\n",
       "      <td>64.7808</td>\n",
       "      <td>91.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-03</th>\n",
       "      <td>90.6497</td>\n",
       "      <td>112.69</td>\n",
       "      <td>726.95</td>\n",
       "      <td>64.7450</td>\n",
       "      <td>90.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-04</th>\n",
       "      <td>91.3781</td>\n",
       "      <td>110.49</td>\n",
       "      <td>708.01</td>\n",
       "      <td>64.2885</td>\n",
       "      <td>89.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-05</th>\n",
       "      <td>88.9375</td>\n",
       "      <td>104.07</td>\n",
       "      <td>683.57</td>\n",
       "      <td>64.2975</td>\n",
       "      <td>82.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-08</th>\n",
       "      <td>89.8740</td>\n",
       "      <td>99.75</td>\n",
       "      <td>682.74</td>\n",
       "      <td>63.8231</td>\n",
       "      <td>83.32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-09</th>\n",
       "      <td>89.8551</td>\n",
       "      <td>99.54</td>\n",
       "      <td>678.11</td>\n",
       "      <td>63.9037</td>\n",
       "      <td>86.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-10</th>\n",
       "      <td>89.1740</td>\n",
       "      <td>101.00</td>\n",
       "      <td>684.12</td>\n",
       "      <td>63.4204</td>\n",
       "      <td>88.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-11</th>\n",
       "      <td>88.6348</td>\n",
       "      <td>101.91</td>\n",
       "      <td>683.11</td>\n",
       "      <td>65.9533</td>\n",
       "      <td>86.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-12</th>\n",
       "      <td>88.9092</td>\n",
       "      <td>102.01</td>\n",
       "      <td>682.40</td>\n",
       "      <td>67.0989</td>\n",
       "      <td>87.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-16</th>\n",
       "      <td>91.4159</td>\n",
       "      <td>101.61</td>\n",
       "      <td>691.00</td>\n",
       "      <td>67.2958</td>\n",
       "      <td>89.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-17</th>\n",
       "      <td>105.7467</td>\n",
       "      <td>117.79</td>\n",
       "      <td>771.23</td>\n",
       "      <td>67.0358</td>\n",
       "      <td>115.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-18</th>\n",
       "      <td>105.8525</td>\n",
       "      <td>117.02</td>\n",
       "      <td>760.54</td>\n",
       "      <td>66.6980</td>\n",
       "      <td>115.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-21</th>\n",
       "      <td>107.4586</td>\n",
       "      <td>121.77</td>\n",
       "      <td>769.20</td>\n",
       "      <td>66.9901</td>\n",
       "      <td>117.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-22</th>\n",
       "      <td>107.5260</td>\n",
       "      <td>121.47</td>\n",
       "      <td>768.27</td>\n",
       "      <td>67.9942</td>\n",
       "      <td>118.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-23</th>\n",
       "      <td>106.9777</td>\n",
       "      <td>120.84</td>\n",
       "      <td>760.99</td>\n",
       "      <td>66.9901</td>\n",
       "      <td>117.69</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-25</th>\n",
       "      <td>107.5163</td>\n",
       "      <td>120.38</td>\n",
       "      <td>761.68</td>\n",
       "      <td>67.6930</td>\n",
       "      <td>117.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-28</th>\n",
       "      <td>107.3047</td>\n",
       "      <td>120.41</td>\n",
       "      <td>768.24</td>\n",
       "      <td>67.4465</td>\n",
       "      <td>116.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-29</th>\n",
       "      <td>107.1990</td>\n",
       "      <td>120.87</td>\n",
       "      <td>770.84</td>\n",
       "      <td>67.6763</td>\n",
       "      <td>117.51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-30</th>\n",
       "      <td>106.2949</td>\n",
       "      <td>118.42</td>\n",
       "      <td>758.04</td>\n",
       "      <td>66.1871</td>\n",
       "      <td>117.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-01</th>\n",
       "      <td>105.3043</td>\n",
       "      <td>115.10</td>\n",
       "      <td>747.92</td>\n",
       "      <td>65.2311</td>\n",
       "      <td>117.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-02</th>\n",
       "      <td>105.6986</td>\n",
       "      <td>115.40</td>\n",
       "      <td>750.50</td>\n",
       "      <td>65.4241</td>\n",
       "      <td>120.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-05</th>\n",
       "      <td>104.9388</td>\n",
       "      <td>117.43</td>\n",
       "      <td>762.52</td>\n",
       "      <td>65.8837</td>\n",
       "      <td>119.16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-06</th>\n",
       "      <td>105.7467</td>\n",
       "      <td>117.31</td>\n",
       "      <td>759.11</td>\n",
       "      <td>66.1595</td>\n",
       "      <td>124.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-07</th>\n",
       "      <td>106.7854</td>\n",
       "      <td>117.95</td>\n",
       "      <td>771.19</td>\n",
       "      <td>66.7846</td>\n",
       "      <td>125.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-08</th>\n",
       "      <td>107.8337</td>\n",
       "      <td>118.91</td>\n",
       "      <td>776.42</td>\n",
       "      <td>66.2698</td>\n",
       "      <td>123.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-09</th>\n",
       "      <td>109.5938</td>\n",
       "      <td>119.68</td>\n",
       "      <td>789.29</td>\n",
       "      <td>67.2075</td>\n",
       "      <td>122.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-12</th>\n",
       "      <td>108.9686</td>\n",
       "      <td>117.77</td>\n",
       "      <td>789.27</td>\n",
       "      <td>67.8418</td>\n",
       "      <td>122.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-13</th>\n",
       "      <td>110.7864</td>\n",
       "      <td>120.31</td>\n",
       "      <td>796.10</td>\n",
       "      <td>67.9797</td>\n",
       "      <td>123.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-14</th>\n",
       "      <td>110.7864</td>\n",
       "      <td>120.21</td>\n",
       "      <td>797.07</td>\n",
       "      <td>67.2167</td>\n",
       "      <td>123.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-15</th>\n",
       "      <td>111.3923</td>\n",
       "      <td>120.57</td>\n",
       "      <td>797.85</td>\n",
       "      <td>67.4833</td>\n",
       "      <td>125.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-16</th>\n",
       "      <td>111.5365</td>\n",
       "      <td>119.87</td>\n",
       "      <td>790.80</td>\n",
       "      <td>67.3730</td>\n",
       "      <td>124.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-19</th>\n",
       "      <td>112.1809</td>\n",
       "      <td>119.24</td>\n",
       "      <td>794.20</td>\n",
       "      <td>67.0328</td>\n",
       "      <td>125.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-20</th>\n",
       "      <td>112.4791</td>\n",
       "      <td>119.09</td>\n",
       "      <td>796.42</td>\n",
       "      <td>67.3546</td>\n",
       "      <td>125.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-21</th>\n",
       "      <td>112.5849</td>\n",
       "      <td>119.04</td>\n",
       "      <td>794.56</td>\n",
       "      <td>67.2443</td>\n",
       "      <td>126.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-22</th>\n",
       "      <td>111.8443</td>\n",
       "      <td>117.40</td>\n",
       "      <td>791.26</td>\n",
       "      <td>67.7131</td>\n",
       "      <td>125.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-23</th>\n",
       "      <td>112.0655</td>\n",
       "      <td>117.27</td>\n",
       "      <td>789.91</td>\n",
       "      <td>67.6303</td>\n",
       "      <td>125.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-27</th>\n",
       "      <td>112.7772</td>\n",
       "      <td>118.01</td>\n",
       "      <td>791.55</td>\n",
       "      <td>67.8877</td>\n",
       "      <td>128.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-28</th>\n",
       "      <td>112.2963</td>\n",
       "      <td>116.92</td>\n",
       "      <td>785.05</td>\n",
       "      <td>67.5016</td>\n",
       "      <td>125.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-29</th>\n",
       "      <td>112.2675</td>\n",
       "      <td>116.35</td>\n",
       "      <td>782.79</td>\n",
       "      <td>67.9889</td>\n",
       "      <td>125.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-30</th>\n",
       "      <td>111.3923</td>\n",
       "      <td>115.05</td>\n",
       "      <td>771.82</td>\n",
       "      <td>67.7590</td>\n",
       "      <td>123.80</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>252 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Symbols         AAPL      FB    GOOG        K    NFLX\n",
       "date                                                 \n",
       "2016-01-04   99.1172  102.22  741.84  64.0916  109.96\n",
       "2016-01-05   96.6334  102.73  742.58  64.3243  107.66\n",
       "2016-01-06   94.7423  102.97  743.62  64.4496  117.68\n",
       "2016-01-07   90.7438   97.92  726.39  62.9818  114.56\n",
       "2016-01-08   91.2236   97.33  714.47  63.9753  111.39\n",
       "2016-01-11   92.7007   97.51  716.03  64.0379  114.97\n",
       "2016-01-12   94.0461   99.37  726.07  63.9663  116.58\n",
       "2016-01-13   91.6282   95.44  700.56  63.4562  106.56\n",
       "2016-01-14   93.6321   98.37  714.72  64.1453  107.06\n",
       "2016-01-15   91.3835   94.97  694.45  63.2503  104.04\n",
       "2016-01-19   90.9413   95.26  701.79  63.7605  107.89\n",
       "2016-01-20   91.0637   94.35  698.45  62.7402  107.74\n",
       "2016-01-21   90.6026   94.16  706.59  62.6149  102.35\n",
       "2016-01-22   95.4197   97.94  725.25  64.0916  100.72\n",
       "2016-01-25   93.5569   97.01  711.67  63.1071   99.12\n",
       "2016-01-26   94.0743   97.34  713.04  63.7247   97.83\n",
       "2016-01-27   87.8930   94.45  699.99  64.0558   91.15\n",
       "2016-01-28   88.5234  109.11  730.96  65.1477   94.41\n",
       "2016-01-29   91.5811  112.21  742.95  65.7295   91.84\n",
       "2016-02-01   90.7250  115.09  752.00  65.8638   94.09\n",
       "2016-02-02   88.8903  114.61  764.65  64.7808   91.49\n",
       "2016-02-03   90.6497  112.69  726.95  64.7450   90.74\n",
       "2016-02-04   91.3781  110.49  708.01  64.2885   89.71\n",
       "2016-02-05   88.9375  104.07  683.57  64.2975   82.79\n",
       "2016-02-08   89.8740   99.75  682.74  63.8231   83.32\n",
       "2016-02-09   89.8551   99.54  678.11  63.9037   86.13\n",
       "2016-02-10   89.1740  101.00  684.12  63.4204   88.45\n",
       "2016-02-11   88.6348  101.91  683.11  65.9533   86.35\n",
       "2016-02-12   88.9092  102.01  682.40  67.0989   87.40\n",
       "2016-02-16   91.4159  101.61  691.00  67.2958   89.05\n",
       "...              ...     ...     ...      ...     ...\n",
       "2016-11-17  105.7467  117.79  771.23  67.0358  115.03\n",
       "2016-11-18  105.8525  117.02  760.54  66.6980  115.21\n",
       "2016-11-21  107.4586  121.77  769.20  66.9901  117.96\n",
       "2016-11-22  107.5260  121.47  768.27  67.9942  118.04\n",
       "2016-11-23  106.9777  120.84  760.99  66.9901  117.69\n",
       "2016-11-25  107.5163  120.38  761.68  67.6930  117.41\n",
       "2016-11-28  107.3047  120.41  768.24  67.4465  116.93\n",
       "2016-11-29  107.1990  120.87  770.84  67.6763  117.51\n",
       "2016-11-30  106.2949  118.42  758.04  66.1871  117.00\n",
       "2016-12-01  105.3043  115.10  747.92  65.2311  117.22\n",
       "2016-12-02  105.6986  115.40  750.50  65.4241  120.81\n",
       "2016-12-05  104.9388  117.43  762.52  65.8837  119.16\n",
       "2016-12-06  105.7467  117.31  759.11  66.1595  124.57\n",
       "2016-12-07  106.7854  117.95  771.19  66.7846  125.39\n",
       "2016-12-08  107.8337  118.91  776.42  66.2698  123.24\n",
       "2016-12-09  109.5938  119.68  789.29  67.2075  122.88\n",
       "2016-12-12  108.9686  117.77  789.27  67.8418  122.83\n",
       "2016-12-13  110.7864  120.31  796.10  67.9797  123.78\n",
       "2016-12-14  110.7864  120.21  797.07  67.2167  123.44\n",
       "2016-12-15  111.3923  120.57  797.85  67.4833  125.00\n",
       "2016-12-16  111.5365  119.87  790.80  67.3730  124.22\n",
       "2016-12-19  112.1809  119.24  794.20  67.0328  125.45\n",
       "2016-12-20  112.4791  119.09  796.42  67.3546  125.12\n",
       "2016-12-21  112.5849  119.04  794.56  67.2443  126.50\n",
       "2016-12-22  111.8443  117.40  791.26  67.7131  125.58\n",
       "2016-12-23  112.0655  117.27  789.91  67.6303  125.59\n",
       "2016-12-27  112.7772  118.01  791.55  67.8877  128.35\n",
       "2016-12-28  112.2963  116.92  785.05  67.5016  125.89\n",
       "2016-12-29  112.2675  116.35  782.79  67.9889  125.33\n",
       "2016-12-30  111.3923  115.05  771.82  67.7590  123.80\n",
       "\n",
       "[252 rows x 5 columns]"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stock_prices5['close']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['AAPL', 'FB', 'GOOG', 'K', 'NFLX'], dtype='object', name='Symbols')\n"
     ]
    }
   ],
   "source": [
    "close = stock_prices5['close']\n",
    "columns = close.columns\n",
    "print(columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [],
   "source": [
    "return_lists = []\n",
    "\n",
    "for column in columns:\n",
    "    returns = close[column].pct_change()\n",
    "    return_lists.append(returns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AAPL</th>\n",
       "      <th>FB</th>\n",
       "      <th>GOOG</th>\n",
       "      <th>K</th>\n",
       "      <th>NFLX</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2016-01-04</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-05</th>\n",
       "      <td>-0.025059</td>\n",
       "      <td>0.004989</td>\n",
       "      <td>0.000998</td>\n",
       "      <td>0.003631</td>\n",
       "      <td>-0.020917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-06</th>\n",
       "      <td>-0.019570</td>\n",
       "      <td>0.002336</td>\n",
       "      <td>0.001401</td>\n",
       "      <td>0.001948</td>\n",
       "      <td>0.093071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-07</th>\n",
       "      <td>-0.042204</td>\n",
       "      <td>-0.049043</td>\n",
       "      <td>-0.023170</td>\n",
       "      <td>-0.022774</td>\n",
       "      <td>-0.026513</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-08</th>\n",
       "      <td>0.005287</td>\n",
       "      <td>-0.006025</td>\n",
       "      <td>-0.016410</td>\n",
       "      <td>0.015774</td>\n",
       "      <td>-0.027671</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-11</th>\n",
       "      <td>0.016192</td>\n",
       "      <td>0.001849</td>\n",
       "      <td>0.002183</td>\n",
       "      <td>0.000979</td>\n",
       "      <td>0.032139</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-12</th>\n",
       "      <td>0.014513</td>\n",
       "      <td>0.019075</td>\n",
       "      <td>0.014022</td>\n",
       "      <td>-0.001118</td>\n",
       "      <td>0.014004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-13</th>\n",
       "      <td>-0.025710</td>\n",
       "      <td>-0.039549</td>\n",
       "      <td>-0.035134</td>\n",
       "      <td>-0.007975</td>\n",
       "      <td>-0.085950</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-14</th>\n",
       "      <td>0.021870</td>\n",
       "      <td>0.030700</td>\n",
       "      <td>0.020212</td>\n",
       "      <td>0.010859</td>\n",
       "      <td>0.004692</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-15</th>\n",
       "      <td>-0.024015</td>\n",
       "      <td>-0.034563</td>\n",
       "      <td>-0.028361</td>\n",
       "      <td>-0.013953</td>\n",
       "      <td>-0.028208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-19</th>\n",
       "      <td>-0.004839</td>\n",
       "      <td>0.003054</td>\n",
       "      <td>0.010570</td>\n",
       "      <td>0.008066</td>\n",
       "      <td>0.037005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-20</th>\n",
       "      <td>0.001346</td>\n",
       "      <td>-0.009553</td>\n",
       "      <td>-0.004759</td>\n",
       "      <td>-0.016002</td>\n",
       "      <td>-0.001390</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-21</th>\n",
       "      <td>-0.005063</td>\n",
       "      <td>-0.002014</td>\n",
       "      <td>0.011654</td>\n",
       "      <td>-0.001997</td>\n",
       "      <td>-0.050028</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-22</th>\n",
       "      <td>0.053167</td>\n",
       "      <td>0.040144</td>\n",
       "      <td>0.026409</td>\n",
       "      <td>0.023584</td>\n",
       "      <td>-0.015926</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-25</th>\n",
       "      <td>-0.019522</td>\n",
       "      <td>-0.009496</td>\n",
       "      <td>-0.018725</td>\n",
       "      <td>-0.015361</td>\n",
       "      <td>-0.015886</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-26</th>\n",
       "      <td>0.005530</td>\n",
       "      <td>0.003402</td>\n",
       "      <td>0.001925</td>\n",
       "      <td>0.009787</td>\n",
       "      <td>-0.013015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-27</th>\n",
       "      <td>-0.065707</td>\n",
       "      <td>-0.029690</td>\n",
       "      <td>-0.018302</td>\n",
       "      <td>0.005196</td>\n",
       "      <td>-0.068282</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-28</th>\n",
       "      <td>0.007172</td>\n",
       "      <td>0.155214</td>\n",
       "      <td>0.044243</td>\n",
       "      <td>0.017046</td>\n",
       "      <td>0.035765</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-29</th>\n",
       "      <td>0.034541</td>\n",
       "      <td>0.028412</td>\n",
       "      <td>0.016403</td>\n",
       "      <td>0.008930</td>\n",
       "      <td>-0.027222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-01</th>\n",
       "      <td>-0.009348</td>\n",
       "      <td>0.025666</td>\n",
       "      <td>0.012181</td>\n",
       "      <td>0.002043</td>\n",
       "      <td>0.024499</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-02</th>\n",
       "      <td>-0.020223</td>\n",
       "      <td>-0.004171</td>\n",
       "      <td>0.016822</td>\n",
       "      <td>-0.016443</td>\n",
       "      <td>-0.027633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-03</th>\n",
       "      <td>0.019793</td>\n",
       "      <td>-0.016752</td>\n",
       "      <td>-0.049304</td>\n",
       "      <td>-0.000553</td>\n",
       "      <td>-0.008198</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-04</th>\n",
       "      <td>0.008035</td>\n",
       "      <td>-0.019523</td>\n",
       "      <td>-0.026054</td>\n",
       "      <td>-0.007051</td>\n",
       "      <td>-0.011351</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-05</th>\n",
       "      <td>-0.026709</td>\n",
       "      <td>-0.058105</td>\n",
       "      <td>-0.034519</td>\n",
       "      <td>0.000140</td>\n",
       "      <td>-0.077137</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-08</th>\n",
       "      <td>0.010530</td>\n",
       "      <td>-0.041511</td>\n",
       "      <td>-0.001214</td>\n",
       "      <td>-0.007378</td>\n",
       "      <td>0.006402</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-09</th>\n",
       "      <td>-0.000210</td>\n",
       "      <td>-0.002105</td>\n",
       "      <td>-0.006781</td>\n",
       "      <td>0.001263</td>\n",
       "      <td>0.033725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-10</th>\n",
       "      <td>-0.007580</td>\n",
       "      <td>0.014667</td>\n",
       "      <td>0.008863</td>\n",
       "      <td>-0.007563</td>\n",
       "      <td>0.026936</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-11</th>\n",
       "      <td>-0.006047</td>\n",
       "      <td>0.009010</td>\n",
       "      <td>-0.001476</td>\n",
       "      <td>0.039938</td>\n",
       "      <td>-0.023742</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-12</th>\n",
       "      <td>0.003096</td>\n",
       "      <td>0.000981</td>\n",
       "      <td>-0.001039</td>\n",
       "      <td>0.017370</td>\n",
       "      <td>0.012160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-16</th>\n",
       "      <td>0.028194</td>\n",
       "      <td>-0.003921</td>\n",
       "      <td>0.012603</td>\n",
       "      <td>0.002934</td>\n",
       "      <td>0.018879</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-17</th>\n",
       "      <td>-0.000364</td>\n",
       "      <td>0.012463</td>\n",
       "      <td>0.008830</td>\n",
       "      <td>0.002457</td>\n",
       "      <td>-0.001389</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-18</th>\n",
       "      <td>0.001001</td>\n",
       "      <td>-0.006537</td>\n",
       "      <td>-0.013861</td>\n",
       "      <td>-0.005039</td>\n",
       "      <td>0.001565</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-21</th>\n",
       "      <td>0.015173</td>\n",
       "      <td>0.040591</td>\n",
       "      <td>0.011387</td>\n",
       "      <td>0.004379</td>\n",
       "      <td>0.023869</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-22</th>\n",
       "      <td>0.000627</td>\n",
       "      <td>-0.002464</td>\n",
       "      <td>-0.001209</td>\n",
       "      <td>0.014989</td>\n",
       "      <td>0.000678</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-23</th>\n",
       "      <td>-0.005099</td>\n",
       "      <td>-0.005186</td>\n",
       "      <td>-0.009476</td>\n",
       "      <td>-0.014767</td>\n",
       "      <td>-0.002965</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-25</th>\n",
       "      <td>0.005035</td>\n",
       "      <td>-0.003807</td>\n",
       "      <td>0.000907</td>\n",
       "      <td>0.010493</td>\n",
       "      <td>-0.002379</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-28</th>\n",
       "      <td>-0.001968</td>\n",
       "      <td>0.000249</td>\n",
       "      <td>0.008613</td>\n",
       "      <td>-0.003641</td>\n",
       "      <td>-0.004088</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-29</th>\n",
       "      <td>-0.000985</td>\n",
       "      <td>0.003820</td>\n",
       "      <td>0.003384</td>\n",
       "      <td>0.003407</td>\n",
       "      <td>0.004960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-30</th>\n",
       "      <td>-0.008434</td>\n",
       "      <td>-0.020270</td>\n",
       "      <td>-0.016605</td>\n",
       "      <td>-0.022005</td>\n",
       "      <td>-0.004340</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-01</th>\n",
       "      <td>-0.009319</td>\n",
       "      <td>-0.028036</td>\n",
       "      <td>-0.013350</td>\n",
       "      <td>-0.014444</td>\n",
       "      <td>0.001880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-02</th>\n",
       "      <td>0.003744</td>\n",
       "      <td>0.002606</td>\n",
       "      <td>0.003450</td>\n",
       "      <td>0.002959</td>\n",
       "      <td>0.030626</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-05</th>\n",
       "      <td>-0.007188</td>\n",
       "      <td>0.017591</td>\n",
       "      <td>0.016016</td>\n",
       "      <td>0.007025</td>\n",
       "      <td>-0.013658</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-06</th>\n",
       "      <td>0.007699</td>\n",
       "      <td>-0.001022</td>\n",
       "      <td>-0.004472</td>\n",
       "      <td>0.004186</td>\n",
       "      <td>0.045401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-07</th>\n",
       "      <td>0.009823</td>\n",
       "      <td>0.005456</td>\n",
       "      <td>0.015913</td>\n",
       "      <td>0.009448</td>\n",
       "      <td>0.006583</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-08</th>\n",
       "      <td>0.009817</td>\n",
       "      <td>0.008139</td>\n",
       "      <td>0.006782</td>\n",
       "      <td>-0.007708</td>\n",
       "      <td>-0.017147</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-09</th>\n",
       "      <td>0.016322</td>\n",
       "      <td>0.006475</td>\n",
       "      <td>0.016576</td>\n",
       "      <td>0.014150</td>\n",
       "      <td>-0.002921</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-12</th>\n",
       "      <td>-0.005705</td>\n",
       "      <td>-0.015959</td>\n",
       "      <td>-0.000025</td>\n",
       "      <td>0.009438</td>\n",
       "      <td>-0.000407</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-13</th>\n",
       "      <td>0.016682</td>\n",
       "      <td>0.021567</td>\n",
       "      <td>0.008654</td>\n",
       "      <td>0.002033</td>\n",
       "      <td>0.007734</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-14</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.000831</td>\n",
       "      <td>0.001218</td>\n",
       "      <td>-0.011224</td>\n",
       "      <td>-0.002747</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-15</th>\n",
       "      <td>0.005469</td>\n",
       "      <td>0.002995</td>\n",
       "      <td>0.000979</td>\n",
       "      <td>0.003966</td>\n",
       "      <td>0.012638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-16</th>\n",
       "      <td>0.001295</td>\n",
       "      <td>-0.005806</td>\n",
       "      <td>-0.008836</td>\n",
       "      <td>-0.001634</td>\n",
       "      <td>-0.006240</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-19</th>\n",
       "      <td>0.005777</td>\n",
       "      <td>-0.005256</td>\n",
       "      <td>0.004299</td>\n",
       "      <td>-0.005050</td>\n",
       "      <td>0.009902</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-20</th>\n",
       "      <td>0.002658</td>\n",
       "      <td>-0.001258</td>\n",
       "      <td>0.002795</td>\n",
       "      <td>0.004801</td>\n",
       "      <td>-0.002631</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-21</th>\n",
       "      <td>0.000941</td>\n",
       "      <td>-0.000420</td>\n",
       "      <td>-0.002335</td>\n",
       "      <td>-0.001638</td>\n",
       "      <td>0.011029</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-22</th>\n",
       "      <td>-0.006578</td>\n",
       "      <td>-0.013777</td>\n",
       "      <td>-0.004153</td>\n",
       "      <td>0.006972</td>\n",
       "      <td>-0.007273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-23</th>\n",
       "      <td>0.001978</td>\n",
       "      <td>-0.001107</td>\n",
       "      <td>-0.001706</td>\n",
       "      <td>-0.001223</td>\n",
       "      <td>0.000080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-27</th>\n",
       "      <td>0.006351</td>\n",
       "      <td>0.006310</td>\n",
       "      <td>0.002076</td>\n",
       "      <td>0.003806</td>\n",
       "      <td>0.021976</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-28</th>\n",
       "      <td>-0.004264</td>\n",
       "      <td>-0.009237</td>\n",
       "      <td>-0.008212</td>\n",
       "      <td>-0.005687</td>\n",
       "      <td>-0.019166</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-29</th>\n",
       "      <td>-0.000256</td>\n",
       "      <td>-0.004875</td>\n",
       "      <td>-0.002879</td>\n",
       "      <td>0.007219</td>\n",
       "      <td>-0.004448</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-30</th>\n",
       "      <td>-0.007796</td>\n",
       "      <td>-0.011173</td>\n",
       "      <td>-0.014014</td>\n",
       "      <td>-0.003381</td>\n",
       "      <td>-0.012208</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>252 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                AAPL        FB      GOOG         K      NFLX\n",
       "date                                                        \n",
       "2016-01-04       NaN       NaN       NaN       NaN       NaN\n",
       "2016-01-05 -0.025059  0.004989  0.000998  0.003631 -0.020917\n",
       "2016-01-06 -0.019570  0.002336  0.001401  0.001948  0.093071\n",
       "2016-01-07 -0.042204 -0.049043 -0.023170 -0.022774 -0.026513\n",
       "2016-01-08  0.005287 -0.006025 -0.016410  0.015774 -0.027671\n",
       "2016-01-11  0.016192  0.001849  0.002183  0.000979  0.032139\n",
       "2016-01-12  0.014513  0.019075  0.014022 -0.001118  0.014004\n",
       "2016-01-13 -0.025710 -0.039549 -0.035134 -0.007975 -0.085950\n",
       "2016-01-14  0.021870  0.030700  0.020212  0.010859  0.004692\n",
       "2016-01-15 -0.024015 -0.034563 -0.028361 -0.013953 -0.028208\n",
       "2016-01-19 -0.004839  0.003054  0.010570  0.008066  0.037005\n",
       "2016-01-20  0.001346 -0.009553 -0.004759 -0.016002 -0.001390\n",
       "2016-01-21 -0.005063 -0.002014  0.011654 -0.001997 -0.050028\n",
       "2016-01-22  0.053167  0.040144  0.026409  0.023584 -0.015926\n",
       "2016-01-25 -0.019522 -0.009496 -0.018725 -0.015361 -0.015886\n",
       "2016-01-26  0.005530  0.003402  0.001925  0.009787 -0.013015\n",
       "2016-01-27 -0.065707 -0.029690 -0.018302  0.005196 -0.068282\n",
       "2016-01-28  0.007172  0.155214  0.044243  0.017046  0.035765\n",
       "2016-01-29  0.034541  0.028412  0.016403  0.008930 -0.027222\n",
       "2016-02-01 -0.009348  0.025666  0.012181  0.002043  0.024499\n",
       "2016-02-02 -0.020223 -0.004171  0.016822 -0.016443 -0.027633\n",
       "2016-02-03  0.019793 -0.016752 -0.049304 -0.000553 -0.008198\n",
       "2016-02-04  0.008035 -0.019523 -0.026054 -0.007051 -0.011351\n",
       "2016-02-05 -0.026709 -0.058105 -0.034519  0.000140 -0.077137\n",
       "2016-02-08  0.010530 -0.041511 -0.001214 -0.007378  0.006402\n",
       "2016-02-09 -0.000210 -0.002105 -0.006781  0.001263  0.033725\n",
       "2016-02-10 -0.007580  0.014667  0.008863 -0.007563  0.026936\n",
       "2016-02-11 -0.006047  0.009010 -0.001476  0.039938 -0.023742\n",
       "2016-02-12  0.003096  0.000981 -0.001039  0.017370  0.012160\n",
       "2016-02-16  0.028194 -0.003921  0.012603  0.002934  0.018879\n",
       "...              ...       ...       ...       ...       ...\n",
       "2016-11-17 -0.000364  0.012463  0.008830  0.002457 -0.001389\n",
       "2016-11-18  0.001001 -0.006537 -0.013861 -0.005039  0.001565\n",
       "2016-11-21  0.015173  0.040591  0.011387  0.004379  0.023869\n",
       "2016-11-22  0.000627 -0.002464 -0.001209  0.014989  0.000678\n",
       "2016-11-23 -0.005099 -0.005186 -0.009476 -0.014767 -0.002965\n",
       "2016-11-25  0.005035 -0.003807  0.000907  0.010493 -0.002379\n",
       "2016-11-28 -0.001968  0.000249  0.008613 -0.003641 -0.004088\n",
       "2016-11-29 -0.000985  0.003820  0.003384  0.003407  0.004960\n",
       "2016-11-30 -0.008434 -0.020270 -0.016605 -0.022005 -0.004340\n",
       "2016-12-01 -0.009319 -0.028036 -0.013350 -0.014444  0.001880\n",
       "2016-12-02  0.003744  0.002606  0.003450  0.002959  0.030626\n",
       "2016-12-05 -0.007188  0.017591  0.016016  0.007025 -0.013658\n",
       "2016-12-06  0.007699 -0.001022 -0.004472  0.004186  0.045401\n",
       "2016-12-07  0.009823  0.005456  0.015913  0.009448  0.006583\n",
       "2016-12-08  0.009817  0.008139  0.006782 -0.007708 -0.017147\n",
       "2016-12-09  0.016322  0.006475  0.016576  0.014150 -0.002921\n",
       "2016-12-12 -0.005705 -0.015959 -0.000025  0.009438 -0.000407\n",
       "2016-12-13  0.016682  0.021567  0.008654  0.002033  0.007734\n",
       "2016-12-14  0.000000 -0.000831  0.001218 -0.011224 -0.002747\n",
       "2016-12-15  0.005469  0.002995  0.000979  0.003966  0.012638\n",
       "2016-12-16  0.001295 -0.005806 -0.008836 -0.001634 -0.006240\n",
       "2016-12-19  0.005777 -0.005256  0.004299 -0.005050  0.009902\n",
       "2016-12-20  0.002658 -0.001258  0.002795  0.004801 -0.002631\n",
       "2016-12-21  0.000941 -0.000420 -0.002335 -0.001638  0.011029\n",
       "2016-12-22 -0.006578 -0.013777 -0.004153  0.006972 -0.007273\n",
       "2016-12-23  0.001978 -0.001107 -0.001706 -0.001223  0.000080\n",
       "2016-12-27  0.006351  0.006310  0.002076  0.003806  0.021976\n",
       "2016-12-28 -0.004264 -0.009237 -0.008212 -0.005687 -0.019166\n",
       "2016-12-29 -0.000256 -0.004875 -0.002879  0.007219 -0.004448\n",
       "2016-12-30 -0.007796 -0.011173 -0.014014 -0.003381 -0.012208\n",
       "\n",
       "[252 rows x 5 columns]"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "returns = pd.DataFrame(return_lists).transpose()\n",
    "returns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          AAPL        FB      GOOG         K      NFLX\n",
      "AAPL  1.000000  0.356460  0.473716  0.186975  0.313326\n",
      "FB    0.356460  1.000000  0.638055  0.283337  0.318372\n",
      "GOOG  0.473716  0.638055  1.000000  0.291432  0.409556\n",
      "K     0.186975  0.283337  0.291432  1.000000  0.092127\n",
      "NFLX  0.313326  0.318372  0.409556  0.092127  1.000000\n"
     ]
    }
   ],
   "source": [
    "correlation_matrix = returns.corr()\n",
    "print(correlation_matrix)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          AAPL        FB      GOOG         K      NFLX\n",
      "AAPL  0.054685  0.023620  0.022036  0.007760  0.032585\n",
      "FB    0.023620  0.080289  0.035964  0.014249  0.040119\n",
      "GOOG  0.022036  0.035964  0.039570  0.010289  0.036231\n",
      "K     0.007760  0.014249  0.010289  0.031500  0.007272\n",
      "NFLX  0.032585  0.040119  0.036231  0.007272  0.197775\n"
     ]
    }
   ],
   "source": [
    "# Calculate the covariance matrix\n",
    "cov_mat = returns.cov()\n",
    "\n",
    "# Annualize the co-variance matrix\n",
    "cov_mat_annual = cov_mat*252\n",
    "\n",
    "# Print the annualized co-variance matrix\n",
    "print(cov_mat_annual)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Finish defining the portfolio weights as a numpy array\n",
    "portfolio_weights = np.array([0.20, 0.10, 0.40, 0.15, 0.15])\n",
    "\n",
    "# Calculate the weighted stock returns\n",
    "WeightedReturns = returns.mul(portfolio_weights, axis=1)\n",
    "\n",
    "# Calculate the portfolio returns\n",
    "returns['Portfolio'] = WeightedReturns.sum(axis=1)\n",
    "\n",
    "# Plot the cumulative portfolio returns over time\n",
    "CumulativeReturns = ((1+returns[\"Portfolio\"]).cumprod()-1)\n",
    "CumulativeReturns.plot()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AAPL</th>\n",
       "      <th>FB</th>\n",
       "      <th>GOOG</th>\n",
       "      <th>K</th>\n",
       "      <th>NFLX</th>\n",
       "      <th>Portfolio</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2016-01-04</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-05</th>\n",
       "      <td>-0.025059</td>\n",
       "      <td>0.004989</td>\n",
       "      <td>0.000998</td>\n",
       "      <td>0.003631</td>\n",
       "      <td>-0.020917</td>\n",
       "      <td>-0.006707</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-06</th>\n",
       "      <td>-0.019570</td>\n",
       "      <td>0.002336</td>\n",
       "      <td>0.001401</td>\n",
       "      <td>0.001948</td>\n",
       "      <td>0.093071</td>\n",
       "      <td>0.011133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-07</th>\n",
       "      <td>-0.042204</td>\n",
       "      <td>-0.049043</td>\n",
       "      <td>-0.023170</td>\n",
       "      <td>-0.022774</td>\n",
       "      <td>-0.026513</td>\n",
       "      <td>-0.030006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-08</th>\n",
       "      <td>0.005287</td>\n",
       "      <td>-0.006025</td>\n",
       "      <td>-0.016410</td>\n",
       "      <td>0.015774</td>\n",
       "      <td>-0.027671</td>\n",
       "      <td>-0.007894</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-11</th>\n",
       "      <td>0.016192</td>\n",
       "      <td>0.001849</td>\n",
       "      <td>0.002183</td>\n",
       "      <td>0.000979</td>\n",
       "      <td>0.032139</td>\n",
       "      <td>0.009264</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-12</th>\n",
       "      <td>0.014513</td>\n",
       "      <td>0.019075</td>\n",
       "      <td>0.014022</td>\n",
       "      <td>-0.001118</td>\n",
       "      <td>0.014004</td>\n",
       "      <td>0.012352</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-13</th>\n",
       "      <td>-0.025710</td>\n",
       "      <td>-0.039549</td>\n",
       "      <td>-0.035134</td>\n",
       "      <td>-0.007975</td>\n",
       "      <td>-0.085950</td>\n",
       "      <td>-0.037239</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-14</th>\n",
       "      <td>0.021870</td>\n",
       "      <td>0.030700</td>\n",
       "      <td>0.020212</td>\n",
       "      <td>0.010859</td>\n",
       "      <td>0.004692</td>\n",
       "      <td>0.017862</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-15</th>\n",
       "      <td>-0.024015</td>\n",
       "      <td>-0.034563</td>\n",
       "      <td>-0.028361</td>\n",
       "      <td>-0.013953</td>\n",
       "      <td>-0.028208</td>\n",
       "      <td>-0.025928</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-19</th>\n",
       "      <td>-0.004839</td>\n",
       "      <td>0.003054</td>\n",
       "      <td>0.010570</td>\n",
       "      <td>0.008066</td>\n",
       "      <td>0.037005</td>\n",
       "      <td>0.010326</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-20</th>\n",
       "      <td>0.001346</td>\n",
       "      <td>-0.009553</td>\n",
       "      <td>-0.004759</td>\n",
       "      <td>-0.016002</td>\n",
       "      <td>-0.001390</td>\n",
       "      <td>-0.005199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-21</th>\n",
       "      <td>-0.005063</td>\n",
       "      <td>-0.002014</td>\n",
       "      <td>0.011654</td>\n",
       "      <td>-0.001997</td>\n",
       "      <td>-0.050028</td>\n",
       "      <td>-0.004356</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-22</th>\n",
       "      <td>0.053167</td>\n",
       "      <td>0.040144</td>\n",
       "      <td>0.026409</td>\n",
       "      <td>0.023584</td>\n",
       "      <td>-0.015926</td>\n",
       "      <td>0.026360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-25</th>\n",
       "      <td>-0.019522</td>\n",
       "      <td>-0.009496</td>\n",
       "      <td>-0.018725</td>\n",
       "      <td>-0.015361</td>\n",
       "      <td>-0.015886</td>\n",
       "      <td>-0.017031</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-26</th>\n",
       "      <td>0.005530</td>\n",
       "      <td>0.003402</td>\n",
       "      <td>0.001925</td>\n",
       "      <td>0.009787</td>\n",
       "      <td>-0.013015</td>\n",
       "      <td>0.001732</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-27</th>\n",
       "      <td>-0.065707</td>\n",
       "      <td>-0.029690</td>\n",
       "      <td>-0.018302</td>\n",
       "      <td>0.005196</td>\n",
       "      <td>-0.068282</td>\n",
       "      <td>-0.032894</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-28</th>\n",
       "      <td>0.007172</td>\n",
       "      <td>0.155214</td>\n",
       "      <td>0.044243</td>\n",
       "      <td>0.017046</td>\n",
       "      <td>0.035765</td>\n",
       "      <td>0.042575</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-29</th>\n",
       "      <td>0.034541</td>\n",
       "      <td>0.028412</td>\n",
       "      <td>0.016403</td>\n",
       "      <td>0.008930</td>\n",
       "      <td>-0.027222</td>\n",
       "      <td>0.013567</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-01</th>\n",
       "      <td>-0.009348</td>\n",
       "      <td>0.025666</td>\n",
       "      <td>0.012181</td>\n",
       "      <td>0.002043</td>\n",
       "      <td>0.024499</td>\n",
       "      <td>0.009551</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-02</th>\n",
       "      <td>-0.020223</td>\n",
       "      <td>-0.004171</td>\n",
       "      <td>0.016822</td>\n",
       "      <td>-0.016443</td>\n",
       "      <td>-0.027633</td>\n",
       "      <td>-0.004344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-03</th>\n",
       "      <td>0.019793</td>\n",
       "      <td>-0.016752</td>\n",
       "      <td>-0.049304</td>\n",
       "      <td>-0.000553</td>\n",
       "      <td>-0.008198</td>\n",
       "      <td>-0.018751</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-04</th>\n",
       "      <td>0.008035</td>\n",
       "      <td>-0.019523</td>\n",
       "      <td>-0.026054</td>\n",
       "      <td>-0.007051</td>\n",
       "      <td>-0.011351</td>\n",
       "      <td>-0.013527</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-05</th>\n",
       "      <td>-0.026709</td>\n",
       "      <td>-0.058105</td>\n",
       "      <td>-0.034519</td>\n",
       "      <td>0.000140</td>\n",
       "      <td>-0.077137</td>\n",
       "      <td>-0.036510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-08</th>\n",
       "      <td>0.010530</td>\n",
       "      <td>-0.041511</td>\n",
       "      <td>-0.001214</td>\n",
       "      <td>-0.007378</td>\n",
       "      <td>0.006402</td>\n",
       "      <td>-0.002677</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-09</th>\n",
       "      <td>-0.000210</td>\n",
       "      <td>-0.002105</td>\n",
       "      <td>-0.006781</td>\n",
       "      <td>0.001263</td>\n",
       "      <td>0.033725</td>\n",
       "      <td>0.002283</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-10</th>\n",
       "      <td>-0.007580</td>\n",
       "      <td>0.014667</td>\n",
       "      <td>0.008863</td>\n",
       "      <td>-0.007563</td>\n",
       "      <td>0.026936</td>\n",
       "      <td>0.006402</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-11</th>\n",
       "      <td>-0.006047</td>\n",
       "      <td>0.009010</td>\n",
       "      <td>-0.001476</td>\n",
       "      <td>0.039938</td>\n",
       "      <td>-0.023742</td>\n",
       "      <td>0.001531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-12</th>\n",
       "      <td>0.003096</td>\n",
       "      <td>0.000981</td>\n",
       "      <td>-0.001039</td>\n",
       "      <td>0.017370</td>\n",
       "      <td>0.012160</td>\n",
       "      <td>0.004731</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-16</th>\n",
       "      <td>0.028194</td>\n",
       "      <td>-0.003921</td>\n",
       "      <td>0.012603</td>\n",
       "      <td>0.002934</td>\n",
       "      <td>0.018879</td>\n",
       "      <td>0.013560</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-17</th>\n",
       "      <td>-0.000364</td>\n",
       "      <td>0.012463</td>\n",
       "      <td>0.008830</td>\n",
       "      <td>0.002457</td>\n",
       "      <td>-0.001389</td>\n",
       "      <td>0.004866</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-18</th>\n",
       "      <td>0.001001</td>\n",
       "      <td>-0.006537</td>\n",
       "      <td>-0.013861</td>\n",
       "      <td>-0.005039</td>\n",
       "      <td>0.001565</td>\n",
       "      <td>-0.006519</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-21</th>\n",
       "      <td>0.015173</td>\n",
       "      <td>0.040591</td>\n",
       "      <td>0.011387</td>\n",
       "      <td>0.004379</td>\n",
       "      <td>0.023869</td>\n",
       "      <td>0.015886</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-22</th>\n",
       "      <td>0.000627</td>\n",
       "      <td>-0.002464</td>\n",
       "      <td>-0.001209</td>\n",
       "      <td>0.014989</td>\n",
       "      <td>0.000678</td>\n",
       "      <td>0.001746</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-23</th>\n",
       "      <td>-0.005099</td>\n",
       "      <td>-0.005186</td>\n",
       "      <td>-0.009476</td>\n",
       "      <td>-0.014767</td>\n",
       "      <td>-0.002965</td>\n",
       "      <td>-0.007989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-25</th>\n",
       "      <td>0.005035</td>\n",
       "      <td>-0.003807</td>\n",
       "      <td>0.000907</td>\n",
       "      <td>0.010493</td>\n",
       "      <td>-0.002379</td>\n",
       "      <td>0.002206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-28</th>\n",
       "      <td>-0.001968</td>\n",
       "      <td>0.000249</td>\n",
       "      <td>0.008613</td>\n",
       "      <td>-0.003641</td>\n",
       "      <td>-0.004088</td>\n",
       "      <td>0.001917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-29</th>\n",
       "      <td>-0.000985</td>\n",
       "      <td>0.003820</td>\n",
       "      <td>0.003384</td>\n",
       "      <td>0.003407</td>\n",
       "      <td>0.004960</td>\n",
       "      <td>0.002794</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-30</th>\n",
       "      <td>-0.008434</td>\n",
       "      <td>-0.020270</td>\n",
       "      <td>-0.016605</td>\n",
       "      <td>-0.022005</td>\n",
       "      <td>-0.004340</td>\n",
       "      <td>-0.014308</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-01</th>\n",
       "      <td>-0.009319</td>\n",
       "      <td>-0.028036</td>\n",
       "      <td>-0.013350</td>\n",
       "      <td>-0.014444</td>\n",
       "      <td>0.001880</td>\n",
       "      <td>-0.011892</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-02</th>\n",
       "      <td>0.003744</td>\n",
       "      <td>0.002606</td>\n",
       "      <td>0.003450</td>\n",
       "      <td>0.002959</td>\n",
       "      <td>0.030626</td>\n",
       "      <td>0.007427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-05</th>\n",
       "      <td>-0.007188</td>\n",
       "      <td>0.017591</td>\n",
       "      <td>0.016016</td>\n",
       "      <td>0.007025</td>\n",
       "      <td>-0.013658</td>\n",
       "      <td>0.005733</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-06</th>\n",
       "      <td>0.007699</td>\n",
       "      <td>-0.001022</td>\n",
       "      <td>-0.004472</td>\n",
       "      <td>0.004186</td>\n",
       "      <td>0.045401</td>\n",
       "      <td>0.007087</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-07</th>\n",
       "      <td>0.009823</td>\n",
       "      <td>0.005456</td>\n",
       "      <td>0.015913</td>\n",
       "      <td>0.009448</td>\n",
       "      <td>0.006583</td>\n",
       "      <td>0.011280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-08</th>\n",
       "      <td>0.009817</td>\n",
       "      <td>0.008139</td>\n",
       "      <td>0.006782</td>\n",
       "      <td>-0.007708</td>\n",
       "      <td>-0.017147</td>\n",
       "      <td>0.001762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-09</th>\n",
       "      <td>0.016322</td>\n",
       "      <td>0.006475</td>\n",
       "      <td>0.016576</td>\n",
       "      <td>0.014150</td>\n",
       "      <td>-0.002921</td>\n",
       "      <td>0.012227</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-12</th>\n",
       "      <td>-0.005705</td>\n",
       "      <td>-0.015959</td>\n",
       "      <td>-0.000025</td>\n",
       "      <td>0.009438</td>\n",
       "      <td>-0.000407</td>\n",
       "      <td>-0.001392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-13</th>\n",
       "      <td>0.016682</td>\n",
       "      <td>0.021567</td>\n",
       "      <td>0.008654</td>\n",
       "      <td>0.002033</td>\n",
       "      <td>0.007734</td>\n",
       "      <td>0.010420</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-14</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.000831</td>\n",
       "      <td>0.001218</td>\n",
       "      <td>-0.011224</td>\n",
       "      <td>-0.002747</td>\n",
       "      <td>-0.001691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-15</th>\n",
       "      <td>0.005469</td>\n",
       "      <td>0.002995</td>\n",
       "      <td>0.000979</td>\n",
       "      <td>0.003966</td>\n",
       "      <td>0.012638</td>\n",
       "      <td>0.004275</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-16</th>\n",
       "      <td>0.001295</td>\n",
       "      <td>-0.005806</td>\n",
       "      <td>-0.008836</td>\n",
       "      <td>-0.001634</td>\n",
       "      <td>-0.006240</td>\n",
       "      <td>-0.005037</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-19</th>\n",
       "      <td>0.005777</td>\n",
       "      <td>-0.005256</td>\n",
       "      <td>0.004299</td>\n",
       "      <td>-0.005050</td>\n",
       "      <td>0.009902</td>\n",
       "      <td>0.003078</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-20</th>\n",
       "      <td>0.002658</td>\n",
       "      <td>-0.001258</td>\n",
       "      <td>0.002795</td>\n",
       "      <td>0.004801</td>\n",
       "      <td>-0.002631</td>\n",
       "      <td>0.001849</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-21</th>\n",
       "      <td>0.000941</td>\n",
       "      <td>-0.000420</td>\n",
       "      <td>-0.002335</td>\n",
       "      <td>-0.001638</td>\n",
       "      <td>0.011029</td>\n",
       "      <td>0.000621</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-22</th>\n",
       "      <td>-0.006578</td>\n",
       "      <td>-0.013777</td>\n",
       "      <td>-0.004153</td>\n",
       "      <td>0.006972</td>\n",
       "      <td>-0.007273</td>\n",
       "      <td>-0.004400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-23</th>\n",
       "      <td>0.001978</td>\n",
       "      <td>-0.001107</td>\n",
       "      <td>-0.001706</td>\n",
       "      <td>-0.001223</td>\n",
       "      <td>0.000080</td>\n",
       "      <td>-0.000569</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-27</th>\n",
       "      <td>0.006351</td>\n",
       "      <td>0.006310</td>\n",
       "      <td>0.002076</td>\n",
       "      <td>0.003806</td>\n",
       "      <td>0.021976</td>\n",
       "      <td>0.006599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-28</th>\n",
       "      <td>-0.004264</td>\n",
       "      <td>-0.009237</td>\n",
       "      <td>-0.008212</td>\n",
       "      <td>-0.005687</td>\n",
       "      <td>-0.019166</td>\n",
       "      <td>-0.008789</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-29</th>\n",
       "      <td>-0.000256</td>\n",
       "      <td>-0.004875</td>\n",
       "      <td>-0.002879</td>\n",
       "      <td>0.007219</td>\n",
       "      <td>-0.004448</td>\n",
       "      <td>-0.001275</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-30</th>\n",
       "      <td>-0.007796</td>\n",
       "      <td>-0.011173</td>\n",
       "      <td>-0.014014</td>\n",
       "      <td>-0.003381</td>\n",
       "      <td>-0.012208</td>\n",
       "      <td>-0.010620</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>252 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                AAPL        FB      GOOG         K      NFLX  Portfolio\n",
       "date                                                                   \n",
       "2016-01-04       NaN       NaN       NaN       NaN       NaN   0.000000\n",
       "2016-01-05 -0.025059  0.004989  0.000998  0.003631 -0.020917  -0.006707\n",
       "2016-01-06 -0.019570  0.002336  0.001401  0.001948  0.093071   0.011133\n",
       "2016-01-07 -0.042204 -0.049043 -0.023170 -0.022774 -0.026513  -0.030006\n",
       "2016-01-08  0.005287 -0.006025 -0.016410  0.015774 -0.027671  -0.007894\n",
       "2016-01-11  0.016192  0.001849  0.002183  0.000979  0.032139   0.009264\n",
       "2016-01-12  0.014513  0.019075  0.014022 -0.001118  0.014004   0.012352\n",
       "2016-01-13 -0.025710 -0.039549 -0.035134 -0.007975 -0.085950  -0.037239\n",
       "2016-01-14  0.021870  0.030700  0.020212  0.010859  0.004692   0.017862\n",
       "2016-01-15 -0.024015 -0.034563 -0.028361 -0.013953 -0.028208  -0.025928\n",
       "2016-01-19 -0.004839  0.003054  0.010570  0.008066  0.037005   0.010326\n",
       "2016-01-20  0.001346 -0.009553 -0.004759 -0.016002 -0.001390  -0.005199\n",
       "2016-01-21 -0.005063 -0.002014  0.011654 -0.001997 -0.050028  -0.004356\n",
       "2016-01-22  0.053167  0.040144  0.026409  0.023584 -0.015926   0.026360\n",
       "2016-01-25 -0.019522 -0.009496 -0.018725 -0.015361 -0.015886  -0.017031\n",
       "2016-01-26  0.005530  0.003402  0.001925  0.009787 -0.013015   0.001732\n",
       "2016-01-27 -0.065707 -0.029690 -0.018302  0.005196 -0.068282  -0.032894\n",
       "2016-01-28  0.007172  0.155214  0.044243  0.017046  0.035765   0.042575\n",
       "2016-01-29  0.034541  0.028412  0.016403  0.008930 -0.027222   0.013567\n",
       "2016-02-01 -0.009348  0.025666  0.012181  0.002043  0.024499   0.009551\n",
       "2016-02-02 -0.020223 -0.004171  0.016822 -0.016443 -0.027633  -0.004344\n",
       "2016-02-03  0.019793 -0.016752 -0.049304 -0.000553 -0.008198  -0.018751\n",
       "2016-02-04  0.008035 -0.019523 -0.026054 -0.007051 -0.011351  -0.013527\n",
       "2016-02-05 -0.026709 -0.058105 -0.034519  0.000140 -0.077137  -0.036510\n",
       "2016-02-08  0.010530 -0.041511 -0.001214 -0.007378  0.006402  -0.002677\n",
       "2016-02-09 -0.000210 -0.002105 -0.006781  0.001263  0.033725   0.002283\n",
       "2016-02-10 -0.007580  0.014667  0.008863 -0.007563  0.026936   0.006402\n",
       "2016-02-11 -0.006047  0.009010 -0.001476  0.039938 -0.023742   0.001531\n",
       "2016-02-12  0.003096  0.000981 -0.001039  0.017370  0.012160   0.004731\n",
       "2016-02-16  0.028194 -0.003921  0.012603  0.002934  0.018879   0.013560\n",
       "...              ...       ...       ...       ...       ...        ...\n",
       "2016-11-17 -0.000364  0.012463  0.008830  0.002457 -0.001389   0.004866\n",
       "2016-11-18  0.001001 -0.006537 -0.013861 -0.005039  0.001565  -0.006519\n",
       "2016-11-21  0.015173  0.040591  0.011387  0.004379  0.023869   0.015886\n",
       "2016-11-22  0.000627 -0.002464 -0.001209  0.014989  0.000678   0.001746\n",
       "2016-11-23 -0.005099 -0.005186 -0.009476 -0.014767 -0.002965  -0.007989\n",
       "2016-11-25  0.005035 -0.003807  0.000907  0.010493 -0.002379   0.002206\n",
       "2016-11-28 -0.001968  0.000249  0.008613 -0.003641 -0.004088   0.001917\n",
       "2016-11-29 -0.000985  0.003820  0.003384  0.003407  0.004960   0.002794\n",
       "2016-11-30 -0.008434 -0.020270 -0.016605 -0.022005 -0.004340  -0.014308\n",
       "2016-12-01 -0.009319 -0.028036 -0.013350 -0.014444  0.001880  -0.011892\n",
       "2016-12-02  0.003744  0.002606  0.003450  0.002959  0.030626   0.007427\n",
       "2016-12-05 -0.007188  0.017591  0.016016  0.007025 -0.013658   0.005733\n",
       "2016-12-06  0.007699 -0.001022 -0.004472  0.004186  0.045401   0.007087\n",
       "2016-12-07  0.009823  0.005456  0.015913  0.009448  0.006583   0.011280\n",
       "2016-12-08  0.009817  0.008139  0.006782 -0.007708 -0.017147   0.001762\n",
       "2016-12-09  0.016322  0.006475  0.016576  0.014150 -0.002921   0.012227\n",
       "2016-12-12 -0.005705 -0.015959 -0.000025  0.009438 -0.000407  -0.001392\n",
       "2016-12-13  0.016682  0.021567  0.008654  0.002033  0.007734   0.010420\n",
       "2016-12-14  0.000000 -0.000831  0.001218 -0.011224 -0.002747  -0.001691\n",
       "2016-12-15  0.005469  0.002995  0.000979  0.003966  0.012638   0.004275\n",
       "2016-12-16  0.001295 -0.005806 -0.008836 -0.001634 -0.006240  -0.005037\n",
       "2016-12-19  0.005777 -0.005256  0.004299 -0.005050  0.009902   0.003078\n",
       "2016-12-20  0.002658 -0.001258  0.002795  0.004801 -0.002631   0.001849\n",
       "2016-12-21  0.000941 -0.000420 -0.002335 -0.001638  0.011029   0.000621\n",
       "2016-12-22 -0.006578 -0.013777 -0.004153  0.006972 -0.007273  -0.004400\n",
       "2016-12-23  0.001978 -0.001107 -0.001706 -0.001223  0.000080  -0.000569\n",
       "2016-12-27  0.006351  0.006310  0.002076  0.003806  0.021976   0.006599\n",
       "2016-12-28 -0.004264 -0.009237 -0.008212 -0.005687 -0.019166  -0.008789\n",
       "2016-12-29 -0.000256 -0.004875 -0.002879  0.007219 -0.004448  -0.001275\n",
       "2016-12-30 -0.007796 -0.011173 -0.014014 -0.003381 -0.012208  -0.010620\n",
       "\n",
       "[252 rows x 6 columns]"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "returns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f45227b32e8>"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# How many stocks are in your portfolio?\n",
    "numstocks = 5\n",
    "\n",
    "# Create an array of equal weights across all assets\n",
    "portfolio_weights_ew = np.repeat(1/numstocks,numstocks)\n",
    "\n",
    "# Calculate the equally-weighted portfolio returns\n",
    "returns['Portfolio_EW'] = returns.iloc[:,0:5].mul(portfolio_weights_ew, axis=1).sum(axis=1)\n",
    "returns['Portfolio'].plot(subplots=False)\n",
    "returns['Portfolio_EW'].plot(subplots=False)\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.17829535289808887\n"
     ]
    }
   ],
   "source": [
    "# Calculate the portfolio standard deviation\n",
    "portfolio_volatility = np.sqrt(np.dot(portfolio_weights.T, np.dot(cov_mat_annual, portfolio_weights)))\n",
    "print(portfolio_volatility)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot the cumulative returns\n",
    "CumulativeReturns = ((1+returns[\"Portfolio\"]).cumprod()-1)\n",
    "CumulativeReturns.plot()\n",
    "CumulativeReturns2 = ((1+returns[\"Portfolio_EW\"]).cumprod()-1)\n",
    "CumulativeReturns2.plot()\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [],
   "source": [
    "########################################### ML FOR FINANCE ##############################################"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "'Timestamp' object is not callable",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-107-0f4e0e5843ce>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m### AAPL 2016\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mstart\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m2016\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mend\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m2016\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m12\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m31\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# Set the ticker\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mTypeError\u001b[0m: 'Timestamp' object is not callable"
     ]
    }
   ],
   "source": [
    "### AAPL 2016\n",
    "start = date(2016,1,1)\n",
    "end = date(2016,12,31)\n",
    "\n",
    "# Set the ticker\n",
    "ticker = 'AAPL'\n",
    "\n",
    "# Set the data source\n",
    "data_source = 'iex'\n",
    "\n",
    "# Import the stock prices\n",
    "stock_prices = DataReader(ticker, data_source, start, end)\n",
    "\n",
    "# Display and inspect the result\n",
    "print(stock_prices.head())\n",
    "stock_prices.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                          5d_close_pct  AAPL_5d_future_close_pct\n",
      "5d_close_pct                  1.000000                  0.080439\n",
      "AAPL_5d_future_close_pct      0.080439                  1.000000\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Create 5-day % changes of Adj_Close for the current day, and 5 days in the future\n",
    "stock_prices['AAPL_5d_future_close'] = stock_prices['close'].shift(-5)\n",
    "stock_prices['AAPL_5d_future_close_pct'] = stock_prices['AAPL_5d_future_close'].pct_change(5)\n",
    "stock_prices['5d_close_pct'] = stock_prices['close'].pct_change(5)\n",
    "\n",
    "# Calculate the correlation matrix between the 5d close pecentage changes (current and future)\n",
    "corr = stock_prices[['5d_close_pct', 'AAPL_5d_future_close_pct']].corr()\n",
    "print(corr)\n",
    "\n",
    "# Scatter the current 5-day percent change vs the future 5-day percent change\n",
    "plt.scatter(stock_prices['5d_close_pct'], stock_prices['AAPL_5d_future_close_pct'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "ename": "IndexError",
     "evalue": "invalid index to scalar variable.",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-124-e5c51334f9ef>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Join 3 stock dataframes together\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mfull_df\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mreturns\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'AAPL'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'FB'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'GOOG'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'K'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'NFLX'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# Converting the index as date\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mfull_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_datetime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfull_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mIndexError\u001b[0m: invalid index to scalar variable."
     ]
    }
   ],
   "source": [
    "# Join 3 stock dataframes together\n",
    "full_df = returns[['AAPL','FB','GOOG','K','NFLX']]\n",
    "\n",
    "# Converting the index as date\n",
    "full_df.index = pd.to_datetime(full_df.index)\n",
    "\n",
    "# Returns daily \n",
    "\n",
    "returns_daily = full_df\n",
    "\n",
    "# Resample the full dataframe to monthly timeframe\n",
    "monthly_df = full_df.resample('BMS').first()\n",
    "\n",
    "# Calculate monthly returns of the stocks\n",
    "returns_monthly = monthly_df.dropna()\n",
    "print(returns_monthly.tail())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Daily covariance of stocks (for each monthly period)\n",
    "covariances = {}\n",
    "rtd_idx = returns_daily.index\n",
    "for i in returns_monthly.index:\n",
    "    # Mask daily returns for each month and year, and calculate covariance\n",
    "    mask = (rtd_idx.month == i.month) & (rtd_idx.year == i.year)\n",
    "    \n",
    "    # Use the mask to get daily returns for the current month and year of monthy returns index\n",
    "    covariances[i] = returns_daily[mask].cov()/10000\n",
    "\n",
    "print(covariances[i])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.36458225 0.3321671  0.16024518 0.05782329 0.08518217]\n"
     ]
    }
   ],
   "source": [
    "portfolio_returns, portfolio_volatility, portfolio_weights = {}, {}, {}\n",
    "\n",
    "# Get portfolio performances at each month\n",
    "for date in sorted(covariances.keys()):\n",
    "    cov = covariances[date]\n",
    "    for portfolio in range(10):\n",
    "        weights = np.random.random(5)\n",
    "        weights /= np.sum(weights) # /= divides weights by their sum to normalize\n",
    "        returns = np.dot(weights, returns_monthly.loc[date])\n",
    "        volatility = np.sqrt(np.dot(weights.T, np.dot(cov, weights)))\n",
    "        portfolio_returns.setdefault(date, []).append(returns)\n",
    "        portfolio_volatility.setdefault(date, []).append(volatility)\n",
    "        portfolio_weights.setdefault(date, []).append(weights)\n",
    "        \n",
    "print(portfolio_weights[date][0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9999999999999999"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sum(portfolio_weights[date][0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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qozWfeLECZPX81NffPEFwsPDoVAoMGbMGKOvf3e8bleuXEF8fDyGDh0Kf39/pKamiqdXuqK367p69SpSUlIQEhICLy8vBAYGYvny5aivrzeYY/To0W1el/Xr11tlTQAwffr0NutdsGCBQR9z7gLX2zW192/Dzc0N27dvN6luU9hMmNqLnrqTU2fzxsTEoKKiwuARFxeH4cOHY+zYsQb72759u0G/OXPmWG1dXVnztWvX8Mtf/hJyuRyfffYZ3njjDezYsQM7d+60yprKysogk8mwa9cufPnll1i1ahUyMjKwbdu2Nvs7fPiwQd1TpkwxeT33unz5MuLi4hAaGoqioiIsX74cqamp+NOf/tStNer1esTHx6OpqQmFhYXYs2cPjh07hjVr1nT4mliyrpqaGtTU1GDDhg0oLi5GdnY2iouL8eKLL7bZX2pqqsHr8uqrr1plTXc9//zzBuv96d+1+70LnCVq8vb2bvN/3datWyGRSNpcL9NZ3SbR6XQCH73zqKqqEhwcHITdu3eLbf/4xz8EiUQiHD58uN1xwcHBwvz58w3a/P39hWXLlt33vP/617+EQYMGCb///e8N2gEI77//vk3V1dmat27dKri4uAg1NTVi25o1a4QhQ4YIV69etcqafvpYunSpMGbMGPH5119/LQAQVCpVh69NZ+v56ePll18W/P39DdrmzZsnhISEdGuNhw4dEiQSifCPf/xD7JOdnS3069dP+O677zr9O2eJuow98vLyBIlEYrBmHx8f4bXXXjPp35Ala5o0aZKwcOHCdtdVUlIiABA+/vhjse348eMCAOH06dNWWdNPH1OnThUiIiIM2jqr29QHj0x7UU/dyel+5j169Ciam5vx61//us22tLQ0+Pv7IyIiArm5uQZvL1prXR2tubS0FBMmTED//v3FtqioKNTU1KCqqspqa7pXY2Oj0VML8+bNw8MPP4zo6GiD3967up6fKi0tbdM/KioKZ8+eRWtra7fVWFpaioCAAINTNVFRUbh58ybKysra/TlYsi5jGhsb0a9fPzg7Oxu079ixA35+fnj88ceRmZnZ6dvXlq7p8OHD8Pf3x/jx47F27Vo0NjYa7Od+7gJn6Zruunz5Mk6dOoUXXnihzbaO6jaVzVyAZA966k5O9zPv+++/j+joaIMLrQBg9erVmDx5MgYMGIBTp05h7dq10Gq1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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Get latest date of available data\n",
    "date = sorted(covariances.keys())[-1]  \n",
    "\n",
    "# Plot efficient frontier\n",
    "# warning: this can take at least 10s for the plot to execute...\n",
    "plt.scatter(x=portfolio_volatility[date], y=portfolio_returns[date],  alpha=1)\n",
    "plt.xlabel('Volatility')\n",
    "plt.ylabel('Returns')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-0.0072134250685254005\n"
     ]
    }
   ],
   "source": [
    "# Empty dictionaries for sharpe ratios and best sharpe indexes by date\n",
    "sharpe_ratio, max_sharpe_idxs = {}, {}\n",
    "\n",
    "# Loop through dates and get sharpe ratio for each portfolio\n",
    "for date in portfolio_returns.keys():\n",
    "    for i, ret in enumerate(portfolio_returns[date]):\n",
    "    \n",
    "        # Divide returns by the volatility for the date and index, i\n",
    "        sharpe_ratio.setdefault(date, []).append(ret / portfolio_volatility[date][i])\n",
    "\n",
    "    # Get the index of the best sharpe ratio for each date\n",
    "    max_sharpe_idxs[date] = np.argmax(sharpe_ratio[date])\n",
    "\n",
    "print(portfolio_returns[date][max_sharpe_idxs[date]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "AAPL   -0.001600\n",
      "FB      0.000087\n",
      "GOOG   -0.000214\n",
      "K      -0.000673\n",
      "NFLX    0.007280\n",
      "Name: 2016-12-01 00:00:00, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "# Calculate exponentially-weighted moving average of daily returns\n",
    "ewma_daily = returns_daily.ewm(span=30).mean()\n",
    "\n",
    "# Resample daily returns to first business day of the month with the first day for that month\n",
    "ewma_monthly = ewma_daily.resample('BMS').first()\n",
    "\n",
    "# Shift ewma for the month by 1 month forward so we can use it as a feature for future predictions \n",
    "ewma_monthly = ewma_monthly.shift(1).dropna()\n",
    "\n",
    "print(ewma_monthly.iloc[-1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[2.05317233e-01 4.74080000e-02 3.38927710e-01 6.81015466e-02\n",
      "  3.40245510e-01]\n",
      " [3.93758907e-01 8.30045301e-02 1.56203611e-01 8.92557490e-02\n",
      "  2.77777203e-01]\n",
      " [4.68537729e-05 2.50513620e-01 1.75314564e-02 3.92183853e-01\n",
      "  3.39724217e-01]\n",
      " [1.46991654e-01 6.96969396e-02 3.86748667e-01 3.90567901e-01\n",
      "  5.99483854e-03]\n",
      " [3.51856705e-01 1.71432112e-02 2.55699804e-01 4.56846847e-02\n",
      "  3.29615594e-01]]\n"
     ]
    }
   ],
   "source": [
    "targets, features = [], []\n",
    "\n",
    "# Create features from price history and targets as ideal portfolio\n",
    "for date, ewma in ewma_monthly.iterrows():\n",
    "\n",
    "    # Get the index of the best sharpe ratio\n",
    "    best_idx = max_sharpe_idxs[date]\n",
    "    targets.append(portfolio_weights[date][best_idx])\n",
    "    features.append(ewma)  # add ewma to features\n",
    "\n",
    "targets = np.array(targets)\n",
    "features = np.array(features)\n",
    "print(targets[-5:])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Get most recent (current) returns and volatility\n",
    "date = sorted(covariances.keys())[-1]\n",
    "cur_returns = portfolio_returns[date]\n",
    "cur_volatility = portfolio_volatility[date]\n",
    "\n",
    "# Plot efficient frontier with sharpe as point\n",
    "plt.scatter(x=cur_volatility, y=cur_returns, alpha=0.1, color='blue')\n",
    "best_idx = max_sharpe_idxs[date]\n",
    "\n",
    "# Place an orange \"X\" on the point with the best Sharpe ratio\n",
    "plt.scatter(x=cur_volatility[best_idx], y=cur_returns[best_idx], marker='x', color='orange')\n",
    "plt.xlabel('Volatility')\n",
    "plt.ylabel('Returns')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.8351540406570237\n",
      "-1.3168592801143766\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor\n",
    "\n",
    "# Make train and test features\n",
    "train_size = int(0.85 * features.shape[0])\n",
    "train_features = features[:train_size]\n",
    "test_features = features[train_size:]\n",
    "train_targets = targets[:train_size]\n",
    "test_targets = targets[train_size:]\n",
    "\n",
    "# Fit the model and check scores on train and test\n",
    "rfr = RandomForestRegressor(n_estimators=300, random_state=42)\n",
    "rfr.fit(train_features, train_targets)\n",
    "print(rfr.score(train_features, train_targets))\n",
    "print(rfr.score(test_features, test_targets))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-2.50592228e-02,  4.98923890e-03,  9.97519681e-04,\n",
       "         3.63074100e-03, -2.09166970e-02],\n",
       "       [-2.78727394e-03,  1.36900031e-02,  3.61010282e-03,\n",
       "         2.66955577e-03, -8.74965981e-03],\n",
       "       [ 2.84482612e-03,  4.08052099e-03,  1.35960969e-03,\n",
       "         1.40029645e-03,  3.67391175e-03],\n",
       "       [ 4.23588109e-03,  3.69830492e-03,  2.16936877e-03,\n",
       "         2.53986982e-03,  4.88696366e-03],\n",
       "       [-6.85158915e-03,  4.22016745e-03, -2.70807394e-03,\n",
       "         1.10051011e-03, -3.00494981e-03],\n",
       "       [ 5.87043400e-04,  1.24909319e-03,  1.42993141e-03,\n",
       "        -1.56765573e-04,  4.22131967e-03],\n",
       "       [-2.03965566e-04, -3.06205618e-04, -3.29461041e-04,\n",
       "         4.12089633e-03,  2.65278935e-03],\n",
       "       [ 4.90353186e-03,  2.98711234e-03,  4.21565496e-03,\n",
       "         9.62756455e-04,  1.93833906e-03],\n",
       "       [ 8.11790446e-04,  1.47897318e-03,  4.78108705e-04,\n",
       "        -1.28820355e-04,  1.58658002e-03],\n",
       "       [ 1.44858179e-03,  8.08000902e-04,  7.48333426e-05,\n",
       "        -1.47841419e-03,  4.02353789e-03],\n",
       "       [-1.60027988e-03,  8.71865556e-05, -2.13816093e-04,\n",
       "        -6.73457376e-04,  7.27950937e-03]])"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AAPL</th>\n",
       "      <th>FB</th>\n",
       "      <th>GOOG</th>\n",
       "      <th>K</th>\n",
       "      <th>NFLX</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2016-01-01</th>\n",
       "      <td>-0.025059</td>\n",
       "      <td>0.004989</td>\n",
       "      <td>0.000998</td>\n",
       "      <td>0.003631</td>\n",
       "      <td>-0.020917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-02-01</th>\n",
       "      <td>-0.009348</td>\n",
       "      <td>0.025666</td>\n",
       "      <td>0.012181</td>\n",
       "      <td>0.002043</td>\n",
       "      <td>0.024499</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-03-01</th>\n",
       "      <td>0.039714</td>\n",
       "      <td>0.027123</td>\n",
       "      <td>0.030153</td>\n",
       "      <td>0.002026</td>\n",
       "      <td>0.052350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-04-01</th>\n",
       "      <td>0.009175</td>\n",
       "      <td>0.017178</td>\n",
       "      <td>0.006658</td>\n",
       "      <td>0.017112</td>\n",
       "      <td>0.033943</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-05-02</th>\n",
       "      <td>-0.001067</td>\n",
       "      <td>0.008420</td>\n",
       "      <td>0.007503</td>\n",
       "      <td>0.008203</td>\n",
       "      <td>0.034211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-06-01</th>\n",
       "      <td>-0.014020</td>\n",
       "      <td>-0.000253</td>\n",
       "      <td>-0.002134</td>\n",
       "      <td>0.007127</td>\n",
       "      <td>-0.010334</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-07-01</th>\n",
       "      <td>0.003034</td>\n",
       "      <td>-0.000788</td>\n",
       "      <td>0.010273</td>\n",
       "      <td>-0.000613</td>\n",
       "      <td>0.056734</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-08-01</th>\n",
       "      <td>0.017656</td>\n",
       "      <td>0.002985</td>\n",
       "      <td>0.005320</td>\n",
       "      <td>-0.004111</td>\n",
       "      <td>0.034192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-01</th>\n",
       "      <td>0.005938</td>\n",
       "      <td>0.000396</td>\n",
       "      <td>0.002255</td>\n",
       "      <td>-0.006326</td>\n",
       "      <td>-0.000718</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-10-03</th>\n",
       "      <td>-0.004689</td>\n",
       "      <td>0.003898</td>\n",
       "      <td>-0.006085</td>\n",
       "      <td>-0.002840</td>\n",
       "      <td>0.041400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-01</th>\n",
       "      <td>-0.018055</td>\n",
       "      <td>-0.011375</td>\n",
       "      <td>-0.001185</td>\n",
       "      <td>0.001064</td>\n",
       "      <td>-0.012573</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-01</th>\n",
       "      <td>-0.009319</td>\n",
       "      <td>-0.028036</td>\n",
       "      <td>-0.013350</td>\n",
       "      <td>-0.014444</td>\n",
       "      <td>0.001880</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                AAPL        FB      GOOG         K      NFLX\n",
       "date                                                        \n",
       "2016-01-01 -0.025059  0.004989  0.000998  0.003631 -0.020917\n",
       "2016-02-01 -0.009348  0.025666  0.012181  0.002043  0.024499\n",
       "2016-03-01  0.039714  0.027123  0.030153  0.002026  0.052350\n",
       "2016-04-01  0.009175  0.017178  0.006658  0.017112  0.033943\n",
       "2016-05-02 -0.001067  0.008420  0.007503  0.008203  0.034211\n",
       "2016-06-01 -0.014020 -0.000253 -0.002134  0.007127 -0.010334\n",
       "2016-07-01  0.003034 -0.000788  0.010273 -0.000613  0.056734\n",
       "2016-08-01  0.017656  0.002985  0.005320 -0.004111  0.034192\n",
       "2016-09-01  0.005938  0.000396  0.002255 -0.006326 -0.000718\n",
       "2016-10-03 -0.004689  0.003898 -0.006085 -0.002840  0.041400\n",
       "2016-11-01 -0.018055 -0.011375 -0.001185  0.001064 -0.012573\n",
       "2016-12-01 -0.009319 -0.028036 -0.013350 -0.014444  0.001880"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "returns_monthly"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Get predictions from model on train and test\n",
    "train_predictions = rfr.predict(train_features)\n",
    "test_predictions = rfr.predict(test_features)\n",
    "\n",
    "# Calculate and plot returns from our RF predictions and the SPY returns\n",
    "test_returns = np.sum(returns_monthly.iloc[train_size:-1] * test_predictions, axis=1)\n",
    "plt.plot(test_returns, label='algo')\n",
    "plt.plot(returns_monthly['AAPL'].iloc[train_size:], label='AAPL')\n",
    "plt.legend()\n",
    "plt.xticks(rotation=45)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "algo returns: 0.0030483228786724794\n",
      "AAPL returns: -0.03176710671853061\n"
     ]
    }
   ],
   "source": [
    "# Calculate the effect of our portfolio selection on a hypothetical $1k investment\n",
    "cash = 1000\n",
    "algo_cash, aapl_cash = [cash], [cash]  # set equal starting cash amounts\n",
    "for r in test_returns:\n",
    "    cash *= 1 + r\n",
    "    algo_cash.append(cash)\n",
    "\n",
    "# Calculate performance for SPY\n",
    "cash = 1000  # reset cash amount\n",
    "for r in returns_monthly['AAPL'].iloc[train_size:]:\n",
    "    cash *= 1 + r\n",
    "    aapl_cash.append(cash)\n",
    "\n",
    "print('algo returns:', (algo_cash[-1] - algo_cash[0]) / algo_cash[0])\n",
    "print('AAPL returns:', (aapl_cash[-1] - aapl_cash[0]) / aapl_cash[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot the algo_cash and spy_cash to compare overall returns\n",
    "plt.plot(algo_cash, label='algo')\n",
    "plt.plot(aapl_cash, label='AAPL')\n",
    "plt.legend()  # show the legend\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
